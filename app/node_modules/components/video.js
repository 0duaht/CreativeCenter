import React, { Component } from 'react';
import {
  View
} from 'react-native';
import Styles from 'styles';
import { bindActionCreators } from 'redux';
import {
  setVideoCurrentTime, setVideoDuration, setVideoComponent,
  pauseVideo, stopVideo
 } from 'actions'
import { connect } from 'react-redux';
import Video from 'react-native-video'
import UtilityMethods from 'services/utilityMethods';

class VideoComponent extends Component {
  render(){
    return (
      <Video source={{uri: this.props.source}}
        ref={(video) => this.props.setVideoComponent(video)}
        volume={1}
        rate={1}
        muted={false}
        paused={!this.props.playing}
        playInBackground={true}
        playWhenInactive={true}
        onLoad={this.onLoad}
        onProgress={this.setProgress}
        onEnd={this.onEnd}
        resizeMode="cover"
        repeat={this.props.repeat}
      />
    )
  }


  setProgress = (params) => {
    if (!this.props.playing) return
    this.props.setVideoCurrentTime(params.currentTime)
  }

  onLoad = (params) => {
    this.props.setVideoDuration(params.duration)
  }

  onEnd = () => {
    this.props.stopVideo();
  }
}

mapStateToProps = state => {
  return {
    source: state.video.source,
    repeat: state.video.repeat,
    playing: state.video.playing,
    currentTime: state.video.currentTime,
    duration: state.video.duration
  }
}

mapDispatchToProps = dispatch => {
  return bindActionCreators({
    setVideoCurrentTime, setVideoDuration, setVideoComponent,
    pauseVideo, stopVideo
  }, dispatch)
}

export default VideoWrapper = connect(mapStateToProps, mapDispatchToProps)(VideoComponent)